model{
	# Dispersion
	repShape ~ dgamma(shapeH, shapeH)
	incShape ~  dgamma(shapeH, shapeH)

	# Effective population size and response
	alpha ~ dgamma(hetShape, hetShape/hetMean)
	effRep ~ dbeta(effRepHa, effRepHb)
	RRprop ~ dunif(0, 1)
	effProp <- pow(effRep,1-RRprop)
	repMean <- pow(effRep,RRprop)

	S[1] <- effProp*pop

	# Kernel and pre-observation period
	R0 ~ dgamma(Rshape, Rshape/Rmean)

	# We use a truncated negative-binomial shape for the generation interval
	genPos ~ dbeta(gpShape/(1-gpMean), gpShape/gpMean)
	genShape ~ dgamma(gsShape, gsShape/gsMean)
	for (j in 1:lag){
		preker[j] <- pow(j, genShape-1)*exp(-j/(genPos*lag))
		ker[j] <- R0*preker[j]/sum(preker)
		preInc[j] ~ dexp(preExp)
	}

	# Observation period
	for (j in 1:max){
		# _FOICHAIN_ is a magic word that's expanded in the autobug
		## foi is the expected number _reported_. 
		## e.g. (ker[1]*inc[j+2] + ker[2]*inc[j+1] + ker[3]*inc[j+0])
		foi[j] <- FOICHAIN*pow(S[lag+j]/S[1], 1+alpha)+foieps

		## inc is really "shadow" incidence:
		##  the expected number reported _given_ the true incidence
		## (rho*I(t))
		## preInc is calculated first to make sure inc is not too big
		## (cannot exceed S[lag+j]*repMean)

		preIncShape[j] <- (incShape*foi[j]/repMean)/(incShape+foi[j]/repMean)
		preInc[lag+j] ~ dgamma(preIncShape[j], preIncShape[j]/foi[j])

		# Observation process
		obsMean[j] ~ dgamma(repShape, repShape/inc[lag+j])
		obs[j] ~ dpois(obsMean[j])
	}

	# Updates that are consistent over both periods
	for(j in 1:(lag+max)){
		S[j+1] <- foieps + S[j] - inc[j]/repMean

		inc[j] <- foieps + S[j]*repMean*
			(1 - pow(1+preInc[j]/(S[j]*repMean*kappa), -kappa)) 
	}

	# Summary parameters
	gen <- inprod(lagvec, ker)/R0
}
